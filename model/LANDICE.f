      MODULE LANDICE
!@sum  LANDICE contains variables and routines dealing with land ice
!@auth Original Development Team
!@ver  1.0
      USE CONSTANT, only : lhm,rhoi,shi
      USE OCEAN, only : ace1i,hc1i
      IMPLICIT NONE
      

      REAL*8, PARAMETER :: Z1E=.1, Z2LI=2.9
      REAL*8, PARAMETER :: HC1DE = Z1E*1129950.
      REAL*8, PARAMETER :: ACE2LI = Z2LI*RHOI
      REAL*8, PARAMETER :: HC2LI = ACE2LI*SHI

      CONTAINS

      SUBROUTINE PRECLI(SNOW,TG1,TG2,PRCP,EPRCP,TPRCP,EDIFS,DIFS,ERUN2
     *     ,RUN0)
!@sum  PRECLI apply precipitation to land ice fraction
!@auth Original Development team
!@ver  1.0
      REAL*8, INTENT(INOUT) :: SNOW,TG1,TG2
      REAL*8, INTENT(IN) :: PRCP,EPRCP,TPRCP
      REAL*8, INTENT(OUT) :: EDIFS,DIFS,ERUN2,RUN0

      REAL*8 HC1,DWATER
C**** initiallize output
      EDIFS=0. ; DIFS=0. ; ERUN2=0. ; RUN0=0.

      HC1=HC1I+SNOW*SHI
      RUN0=0.
      IF (TPRCP.GE.0.) THEN
        IF (EPRCP.GE.-TG1*HC1) THEN
C**** RAIN HEATS UP TG1 TO FREEZING POINT AND MELTS SOME SNOW OR ICE
          DWATER=(TG1*HC1+EPRCP)/LHM
          TG1=0.
          RUN0=DWATER+PRCP
          IF (DWATER.LE.SNOW) THEN
C**** RAIN MELTS SOME SNOW
            SNOW=SNOW-DWATER
            RETURN
          END IF
C**** RAIN MELTS ALL SNOW AND SOME ICE, ICE MOVES UP THROUGH THE LAYERS
          DIFS=SNOW-DWATER
          SNOW=0.
          TG1=-TG2*DIFS/ACE1I
          EDIFS=DIFS*(TG2*SHI-LHM)
          ERUN2=EDIFS
          RETURN
        END IF
C**** RAIN COOLS TO FREEZING POINT AND HEATS UP TG1
        TG1=TG1+EPRCP/HC1
        RUN0=PRCP
        RETURN
      END IF
C**** SNOW INCREASES SNOW AMOUNT AND SNOW TEMPERATURE RECOMPUTES TG1
      TG1=(TG1*HC1+EPRCP)/(HC1+PRCP*SHI)
      SNOW=SNOW+PRCP
      IF (SNOW.gt.ACE1I) THEN
C**** SNOW IS COMPACTED INTO ICE, ICE MOVES DOWN THROUGH THE LAYERS
        DIFS=SNOW-.9*ACE1I
        SNOW=.9*ACE1I
        EDIFS=DIFS*(TG1*SHI-LHM)
        ERUN2=DIFS*(TG2*SHI-LHM)
        TG2=TG2+(TG1-TG2)*DIFS/ACE2LI
      END IF
      RETURN
      END SUBROUTINE PRECLI

      SUBROUTINE LNDICE(SNOW,TG1,TG2,F0DT,F1DT,EVAP,EDIFS,DIFS,RUN0)
!@sum  PRECLI apply precipitation to land ice fraction
!@auth Original Development team
!@ver  1.0
      REAL*8, INTENT(INOUT) :: SNOW,TG1,TG2
      REAL*8, INTENT(IN) :: F0DT,F1DT,EVAP
      REAL*8, INTENT(OUT) :: EDIFS,DIFS,RUN0

      REAL*8 :: SNANDI,HC1,ENRG1
C**** initiallize output
      EDIFS=0. ; DIFS=0. ; RUN0=0.

C**** CALCULATE TG1
      SNANDI=SNOW+ACE1I-EVAP
      HC1=SNANDI*SHI
      ENRG1=F0DT+EVAP*(TG1*SHI-LHM)-F1DT
      IF (ENRG1.GT.-TG1*HC1) THEN
C**** FLUXES HEAT UP TG1 TO FREEZING POINT AND MELT SOME SNOW AND ICE
        RUN0=(ENRG1+TG1*HC1)/LHM
        TG1=0.
        SNANDI=SNANDI-RUN0
      ELSE
C**** FLUXES RECOMPUTE TG1 WHICH IS BELOW FREEZING POINT
        TG1=TG1+ENRG1/HC1
      END IF
      IF (SNANDI.LT.ACE1I) THEN
C**** SOME ICE HAS MELTED OR EVAPORATED, TAKE IT FROM G2
        SNOW=0.
        DIFS=SNANDI-ACE1I
        TG1=(TG1*SNANDI-TG2*DIFS)/ACE1I
        EDIFS=DIFS*(TG2*SHI-LHM)
      ELSE
        SNOW=SNANDI-ACE1I
      END IF
C**** CALCULATE TG2
      TG2=TG2+F1DT/HC2LI

      RETURN
      END SUBROUTINE LNDICE

      END MODULE LANDICE



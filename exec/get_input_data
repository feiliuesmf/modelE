#!/usr/bin/perl

use File::Copy;

if ( $#ARGV < 0 ) { 
    print "Usage: $0 RunID [data_dir]\n"; 
    print "  Creates a directory 'data_dir' (or 'RunID_data' by default)\n";
    print "  and copies there all input files required to run RunID.\n";
    print "  Itended to be used when taking the model off-site.\n";
    exit; 
}

## default settings
$DECKS_REPOSITORY='';
$GCMSEARCHPATH='';

$modelerc = (getpwuid($>))[7]."/.modelErc";

if ( -f $modelerc ) {
  open MODELERC, $modelerc or die "can't open $modelerc\n";
  while(<MODELERC>) {
    $DECKS_REPOSITORY = $1 if /^ *DECKS_REPOSITORY *= *(\S+)/;
    $GCMSEARCHPATH = $1 if /^ *GCMSEARCHPATH *= *(\S+)/;
  }
  close MODELERC;
}

$runID = shift;
($data_dir = shift) or $data_dir = $runID.'_data';

print "Will search for data files in: $GCMSEARCHPATH\n";
print "Will store the data files  in: $data_dir\n";

if ( -f "$runID.R" ) { $rundeck = "$runID.R"; }
else { $rundeck = "$DECKS_REPOSITORY/$runID.R"; }

print "Will use rundeck: $rundeck\n";

open RUNDECK,"$rundeck" or die "can't open file: $rundeck\n";

while(<RUNDECK>) { last if /^Data +input +files/i; }

@a=();
while(<RUNDECK>) {
    last if /^Label +and +Namelist/i;
    chop;
    s/!.*$//;  #remove comments
    push @a, /(\S+ *= *\S+)/g;
}

## creating data dir
if ( ! -d $data_dir ) {
    mkdir $data_dir, 0755 or die "can't create dir: $data_dir\n";
}

foreach $str (@a) {
    #print "$str\n";
    ($tag,$filename) = split / *= */, $str;
    print "Copying:     $filename\n";
    copy( "$GCMSEARCHPATH/$filename", "$data_dir/$filename") or
	die "Can't copy $GCMSEARCHPATH/$filename\n";
}


